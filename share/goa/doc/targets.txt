
                                   Targets


                              Johannes Schlatow

Goa supports different targets for executing a system scenario. A target is
selected by setting the config 'target' variable or by providing the '--target'
argument on the command line. By default, Goa uses the 'linux' target for
'goa run'.

AVAILABLE TARGETS
#################

linux
=====

This target uses base-linux to execute the project on top of the running Linux
kernel. The 'linux' target evaluates the following services mentioned in
the _runtime_ file's <requires> node:

:<event/>:
  Any required _Event_ service is routed to a nitpicker component.

:<capture/>:
  Any required _Capture_ service is routed to a nitpicker component.

:<gui/>:
  Any required _Gui_ service is routed to a nitpicker component.

:<timer/>:
  Any required _Timer_ service is routed to a timer component.

:<rm/>:
  Any required _RM_ service is routed to core.

:<trace/>:
  Any required _TRACE_ service is routed to core.

:<rtc/>:
  Any required _Rtc_ service is routed to a linux_rtc_drv component.

:<file_system label="<label>"/>:
  If <label> equals "fonts", a _File_system" requirement is routed to a
  fonts_fs component.
  For any other required _File_system_ a separate lx_fs component is added to
  the runtime and configured to provide access to the host directory
  'var/projects/<project_name>/fs/<label>'.

:<nic label="<label>"/>:
  For every required _Nic_ service, a linux_nic_drv and a nic_router is
  added to the runtime. The linux_nic_drv is configured to use the tap device
  '<label>' and connects to the uplink domain of the Nic router. The latter
  is configured as a DHCP client for its uplink interface and as a DHCP server
  for its default domain. Each nic_router will use a distinct subnet for its
  default domain, starting from 10.0.10.0/24 and ending at 10.0.255.0/24. If no
  <label> is provided, the linux_nic_drv will use the tap device 'tap0'.

:<gpu/>:
  Any required _Gpu_ service is routed to a black-hole component.

:<rom label="mesa_gpu_drv.lib.so"/>:
  The 'mesa_gpu_drv.lib.so' _ROM_ requirement is routed to the
  'mesa_gpu-softpipe.lib' ROM module.

:<rom label="clipboard"/>:
  The clipboard _ROM_ requirement is routed to a report_rom component.

:<report label="<label>"/>:
  If <label> equals "clipboard", a _Report_ requirement is routed to a report_rom
  component. For any other label, the Report service is routed to a black-hole
  component.

:<audio_in/> and <audio_out/>:
  Any required _Audio_in_ and _Audio_out_ service is routed to a black-hole
  component.

:<usb/>:
  Any required _Usb_ service is routed to a black-hole component.

:<uplink/>:
  Any required _Uplink_ service is routed to a black-hole component.


The 'linux' target evaluates the following services mentioned in
the _runtime_ file's <provides> node:

:<uplink label="<tap-name>"/>:
  For the first provided _Uplink_ service a linux_nic_drv component is added to
  the runtime and configured to use the tap device <tap-name>.


ADDING A CUSTOM TARGET TO GOA
#############################

A custom run target is added by creating a file 'share/goa/lib/run/<target>.tcl'.
The file must implement the following procedures:

:base_archives:
  Returns a list of those depot archives that are always needed.

:bind_required_services:
  Gets an array of required services as argument. The array entries are named
  after the lower-case service type. Each entry is a list of the corresponding
  XML nodes from the _runtime_ file. The procedure is supposed to unset the
  array entries or remove individual list items to indicate to the caller that
  these requirements have been processed. Note that the procedure must use
  'upvar' to access the array:

  ! proc bind_required_services { services_arr } {
  !  upvar 1 $services_arr services
  !  ...
  ! }

:bind_provided_services:
  Same as 'bind_required_services' but called with the services found in the
  '<provides>' node of the _runtime_ file.

:run_genode:
  Is called after the run_dir has been prepared and the scenario is ready to be
  executed.


SEE ALSO
########

add-depot-user, artifacts, build-systems, import, config, overview
